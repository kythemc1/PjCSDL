{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist';\nimport { generatePersistConfig } from './../ultis/Redux';\nimport { authReducer } from \"./Reducer/authSlice\";\nimport { cartReducer } from \"./Reducer/cartSlice\";\nconst reducers = combineReducers({\n  auth: authReducer,\n  cart: cartReducer\n});\nconst version = 22021401;\nconst persistedReducer = persistReducer(generatePersistConfig({\n  whitelist: ['auth', 'cart'],\n  version\n}), reducers);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => {\n    const middlewares = getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n    return middlewares;\n  }\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["configureStore","combineReducers","FLUSH","PAUSE","PERSIST","persistReducer","persistStore","PURGE","REGISTER","REHYDRATE","generatePersistConfig","authReducer","cartReducer","reducers","auth","cart","version","persistedReducer","whitelist","store","reducer","middleware","getDefaultMiddleware","middlewares","serializableCheck","ignoredActions","persistor"],"sources":["G:/CSDL/my-app/src/store/reduxProvider.tsx"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit';\r\nimport {combineReducers} from 'redux';\r\nimport {\r\n    FLUSH,\r\n    PAUSE,\r\n    PERSIST,\r\n    persistReducer,\r\n    persistStore,\r\n    PURGE,\r\n    REGISTER,\r\n    REHYDRATE,\r\n} from 'redux-persist';\r\nimport {generatePersistConfig} from './../ultis/Redux';\r\nimport {authReducer} from \"./Reducer/authSlice\";\r\nimport {cartReducer} from \"./Reducer/cartSlice\";\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    cart: cartReducer\r\n});\r\n\r\nconst version = 22021401;\r\n\r\nconst persistedReducer = persistReducer(\r\n    generatePersistConfig({\r\n        whitelist: [\r\n            'auth',\r\n            'cart'\r\n        ],\r\n        version,\r\n    }),\r\n    reducers,\r\n);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware => {\r\n        const middlewares = getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        });\r\n\r\n        return middlewares;\r\n    },\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport {store, persistor};\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,SAAQC,eAAe,QAAO,OAAO;AACrC,SACIC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,cAAc,EACdC,YAAY,EACZC,KAAK,EACLC,QAAQ,EACRC,SAAS,QACN,eAAe;AACtB,SAAQC,qBAAqB,QAAO,kBAAkB;AACtD,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,MAAMC,QAAQ,GAAGZ,eAAe,CAAC;EAC7Ba,IAAI,EAAEH,WAAW;EACjBI,IAAI,EAAEH;AACV,CAAC,CAAC;AAEF,MAAMI,OAAO,GAAG,QAAQ;AAExB,MAAMC,gBAAgB,GAAGZ,cAAc,CACnCK,qBAAqB,CAAC;EAClBQ,SAAS,EAAE,CACP,MAAM,EACN,MAAM,CACT;EACDF;AACJ,CAAC,CAAC,EACFH,QACJ,CAAC;AAED,MAAMM,KAAK,GAAGnB,cAAc,CAAC;EACzBoB,OAAO,EAAEH,gBAAgB;EACzBI,UAAU,EAAEC,oBAAoB,IAAI;IAChC,MAAMC,WAAW,GAAGD,oBAAoB,CAAC;MACrCE,iBAAiB,EAAE;QACfC,cAAc,EAAE,CAACvB,KAAK,EAAEO,SAAS,EAAEN,KAAK,EAAEC,OAAO,EAAEG,KAAK,EAAEC,QAAQ;MACtE;IACJ,CAAC,CAAC;IAEF,OAAOe,WAAW;EACtB;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGpB,YAAY,CAACa,KAAK,CAAC;AAErC,SAAQA,KAAK,EAAEO,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}