{"ast":null,"code":"var _jsxFileName = \"G:\\\\CSDL\\\\my-app\\\\src\\\\pages\\\\Man\\\\index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MydModalWithGrid(props) {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the content of the modal.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: closeModal,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n}\n_s(MydModalWithGrid, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = MydModalWithGrid;\nfunction Man() {\n  _s2();\n  const [modalShow, setModalShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: () => setModalShow(true),\n      children: \"Launch modal with grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MydModalWithGrid, {\n      show: modalShow,\n      onHide: () => setModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s2(Man, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n_c2 = Man;\nexport default Man;\nvar _c, _c2;\n$RefreshReg$(_c, \"MydModalWithGrid\");\n$RefreshReg$(_c2, \"Man\");","map":{"version":3,"names":["React","useState","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","MydModalWithGrid","props","_s","showModal","setShowModal","openModal","closeModal","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","Footer","variant","_c","Man","_s2","modalShow","setModalShow","_c2","$RefreshReg$"],"sources":["G:/CSDL/my-app/src/pages/Man/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction MydModalWithGrid(props:any) {\r\n\r\n        const [showModal, setShowModal] = useState(false);\r\n\r\n        const openModal = () => {\r\n            setShowModal(true);\r\n        };\r\n\r\n        const closeModal = () => {\r\n            setShowModal(false);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Button onClick={openModal}>Open Modal</Button>\r\n\r\n                <Modal show={showModal} onHide={closeModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal Title</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>This is the content of the modal.</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={closeModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={closeModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n \r\n}\r\n\r\nfunction Man() {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                Launch modal with grid\r\n            </Button>\r\n\r\n            <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Man;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAG3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1C,SAASC,gBAAgBA,CAACC,KAAS,EAAE;EAAAC,EAAA;EAE7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACpBD,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrBF,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIP,OAAA;IAAAU,QAAA,gBACIV,OAAA,CAACH,MAAM;MAACc,OAAO,EAAEH,SAAU;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/Cf,OAAA,CAACF,KAAK;MAACkB,IAAI,EAAEV,SAAU;MAACW,MAAM,EAAER,UAAW;MAAAC,QAAA,gBACvCV,OAAA,CAACF,KAAK,CAACoB,MAAM;QAACC,WAAW;QAAAT,QAAA,eACrBV,OAAA,CAACF,KAAK,CAACsB,KAAK;UAAAV,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACff,OAAA,CAACF,KAAK,CAACuB,IAAI;QAAAX,QAAA,eACPV,OAAA;UAAAU,QAAA,EAAG;QAAiC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACbf,OAAA,CAACF,KAAK,CAACwB,MAAM;QAAAZ,QAAA,gBACTV,OAAA,CAACH,MAAM;UAAC0B,OAAO,EAAC,WAAW;UAACZ,OAAO,EAAEF,UAAW;UAAAC,QAAA,EAAC;QAEjD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTf,OAAA,CAACH,MAAM;UAAC0B,OAAO,EAAC,SAAS;UAACZ,OAAO,EAAEF,UAAW;UAAAC,QAAA,EAAC;QAE/C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGlB;AAACV,EAAA,CAnCQF,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AAqCzB,SAASsB,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACII,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA,CAACH,MAAM;MAAC0B,OAAO,EAAC,SAAS;MAACZ,OAAO,EAAEA,CAAA,KAAMiB,YAAY,CAAC,IAAI,CAAE;MAAAlB,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETf,OAAA,CAACG,gBAAgB;MAACa,IAAI,EAAEW,SAAU;MAACV,MAAM,EAAEA,CAAA,KAAMW,YAAY,CAAC,KAAK;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1E,CAAC;AAEX;AAACW,GAAA,CAZQD,GAAG;AAAAI,GAAA,GAAHJ,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}