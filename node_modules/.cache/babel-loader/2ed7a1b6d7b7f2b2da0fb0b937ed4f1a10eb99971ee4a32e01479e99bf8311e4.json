{"ast":null,"code":"import { useRef as r, useEffect as n, useMemo as t, useCallback as u, useState as e } from \"react\";\nfunction c(u, e, c) {\n  var i = this,\n    a = r(null),\n    o = r(0),\n    f = r(null),\n    l = r([]),\n    m = r(),\n    v = r(),\n    d = r(u),\n    p = r(!0);\n  n(function () {\n    d.current = u;\n  }, [u]);\n  var g = !e && 0 !== e && \"undefined\" != typeof window;\n  if (\"function\" != typeof u) throw new TypeError(\"Expected a function\");\n  e = +e || 0;\n  var w = !!(c = c || {}).leading,\n    s = !(\"trailing\" in c) || !!c.trailing,\n    x = (\"maxWait\" in c),\n    y = x ? Math.max(+c.maxWait || 0, e) : null;\n  n(function () {\n    return p.current = !0, function () {\n      p.current = !1;\n    };\n  }, []);\n  var h = t(function () {\n    var r = function (r) {\n        var n = l.current,\n          t = m.current;\n        return l.current = m.current = null, o.current = r, v.current = d.current.apply(t, n);\n      },\n      n = function (r, n) {\n        g && cancelAnimationFrame(f.current), f.current = g ? requestAnimationFrame(r) : setTimeout(r, n);\n      },\n      t = function (r) {\n        if (!p.current) return !1;\n        var n = r - a.current;\n        return !a.current || n >= e || n < 0 || x && r - o.current >= y;\n      },\n      u = function (n) {\n        return f.current = null, s && l.current ? r(n) : (l.current = m.current = null, v.current);\n      },\n      c = function r() {\n        var c = Date.now();\n        if (t(c)) return u(c);\n        if (p.current) {\n          var i = e - (c - a.current),\n            f = x ? Math.min(i, y - (c - o.current)) : i;\n          n(r, f);\n        }\n      },\n      h = function () {\n        var u = Date.now(),\n          d = t(u);\n        if (l.current = [].slice.call(arguments), m.current = i, a.current = u, d) {\n          if (!f.current && p.current) return o.current = a.current, n(c, e), w ? r(a.current) : v.current;\n          if (x) return n(c, e), r(a.current);\n        }\n        return f.current || n(c, e), v.current;\n      };\n    return h.cancel = function () {\n      f.current && (g ? cancelAnimationFrame(f.current) : clearTimeout(f.current)), o.current = 0, l.current = a.current = m.current = f.current = null;\n    }, h.isPending = function () {\n      return !!f.current;\n    }, h.flush = function () {\n      return f.current ? u(Date.now()) : v.current;\n    }, h;\n  }, [w, x, e, y, s, g]);\n  return h;\n}\nfunction i(r, n) {\n  return r === n;\n}\nfunction a(r) {\n  return \"function\" == typeof r ? function () {\n    return r;\n  } : r;\n}\nfunction o(n, t, o) {\n  var f,\n    l,\n    m = o && o.equalityFn || i,\n    v = (f = e(a(n)), l = f[1], [f[0], u(function (r) {\n      return l(a(r));\n    }, [])]),\n    d = v[0],\n    p = v[1],\n    g = c(u(function (r) {\n      return p(r);\n    }, [p]), t, o),\n    w = r(n);\n  return m(w.current, n) || (g(n), w.current = n), [d, g];\n}\nfunction f(r, n, t) {\n  var u = void 0 === t ? {} : t,\n    e = u.leading,\n    i = u.trailing;\n  return c(r, n, {\n    maxWait: n,\n    leading: void 0 === e || e,\n    trailing: void 0 === i || i\n  });\n}\nexport { o as useDebounce, c as useDebouncedCallback, f as useThrottledCallback };","map":{"version":3,"names":["c","u","e","i","a","r","o","f","l","m","v","d","p","n","current","g","window","TypeError","w","leading","s","trailing","x","y","Math","max","maxWait","h","t","invokeFunc","apply","startTimer","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","trailingEdge","Date","now","min","func","slice","call","arguments","cancel","clearTimeout","isPending","flush","equalityFn","useDebounce","useDebouncedCallback","useThrottledCallback"],"sources":["G:\\CSDL\\my-app\\node_modules\\use-debounce\\src\\useDebouncedCallback.ts","G:\\CSDL\\my-app\\node_modules\\use-debounce\\src\\useDebounce.ts","G:\\CSDL\\my-app\\node_modules\\use-debounce\\src\\useThrottledCallback.ts"],"sourcesContent":["import { useRef, useEffect, useMemo } from 'react';\n\nexport interface CallOptions {\n  /**\n   * Controls if the function should be invoked on the leading edge of the timeout.\n   */\n  leading?: boolean;\n  /**\n   * Controls if the function should be invoked on the trailing edge of the timeout.\n   */\n  trailing?: boolean;\n}\n\nexport interface Options extends CallOptions {\n  /**\n   * The maximum time the given function is allowed to be delayed before it's invoked.\n   */\n  maxWait?: number;\n}\n\nexport interface ControlFunctions {\n  /**\n   * Cancel pending function invocations\n   */\n  cancel: () => void;\n  /**\n   * Immediately invoke pending function invocations\n   */\n  flush: () => void;\n  /**\n   * Returns `true` if there are any pending function invocations\n   */\n  isPending: () => boolean;\n}\n\n/**\n * Subsequent calls to the debounced function `debounced.callback` return the result of the last func invocation.\n * Note, that if there are no previous invocations it's mean you will get undefined. You should check it in your code properly.\n */\nexport interface DebouncedState<T extends (...args: any) => ReturnType<T>> extends ControlFunctions {\n  (...args: Parameters<T>): ReturnType<T> | undefined;\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn.\n *\n * The debounced function comes with a `cancel` method to cancel delayed `func`\n * invocations and a `flush` method to immediately invoke them.\n *\n * Provide `options` to indicate whether `func` should be invoked on the leading\n * and/or trailing edge of the `wait` timeout. The `func` is invoked with the\n * last arguments provided to the debounced function.\n *\n * Subsequent calls to the debounced function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Controls if `func` should be invoked on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Controls if `func` should be invoked the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback<T extends (...args: any) => ReturnType<T>>(\n  func: T,\n  wait?: number,\n  options?: Options\n): DebouncedState<T> {\n  const lastCallTime = useRef(null);\n  const lastInvokeTime = useRef(0);\n  const timerId = useRef(null);\n  const lastArgs = useRef<unknown[]>([]);\n  const lastThis = useRef<unknown>();\n  const result = useRef<ReturnType<T>>();\n  const funcRef = useRef(func);\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    funcRef.current = func;\n  }, [func]);\n\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = +wait || 0;\n  options = options || {};\n\n  const leading = !!options.leading;\n  const trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n  const maxing = 'maxWait' in options;\n  const maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n  const debounced = useMemo(() => {\n    const invokeFunc = (time: number) => {\n      const args = lastArgs.current;\n      const thisArg = lastThis.current;\n\n      lastArgs.current = lastThis.current = null;\n      lastInvokeTime.current = time;\n      return (result.current = funcRef.current.apply(thisArg, args));\n    };\n\n    const startTimer = (pendingFunc: () => void, wait: number) => {\n      if (useRAF) cancelAnimationFrame(timerId.current);\n      timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n    };\n\n    const shouldInvoke = (time: number) => {\n      if (!mounted.current) return false;\n\n      const timeSinceLastCall = time - lastCallTime.current;\n      const timeSinceLastInvoke = time - lastInvokeTime.current;\n\n      // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n      return (\n        !lastCallTime.current ||\n        timeSinceLastCall >= wait ||\n        timeSinceLastCall < 0 ||\n        (maxing && timeSinceLastInvoke >= maxWait)\n      );\n    };\n\n    const trailingEdge = (time: number) => {\n      timerId.current = null;\n\n      // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time);\n      }\n      lastArgs.current = lastThis.current = null;\n      return result.current;\n    };\n\n    const timerExpired = () => {\n      const time = Date.now();\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      }\n      // https://github.com/xnimorz/use-debounce/issues/97\n      if (!mounted.current) {\n        return;\n      }\n      // Remaining wait calculation\n      const timeSinceLastCall = time - lastCallTime.current;\n      const timeSinceLastInvoke = time - lastInvokeTime.current;\n      const timeWaiting = wait - timeSinceLastCall;\n      const remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n\n      // Restart the timer\n      startTimer(timerExpired, remainingWait);\n    };\n\n    const func: DebouncedState<T> = (...args: Parameters<T>): ReturnType<T> => {\n      const time = Date.now();\n      const isInvoking = shouldInvoke(time);\n\n      lastArgs.current = args;\n      lastThis.current = this;\n      lastCallTime.current = time;\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          lastInvokeTime.current = lastCallTime.current;\n          // Start the timer for the trailing edge.\n          startTimer(timerExpired, wait);\n          // Invoke the leading edge.\n          return leading ? invokeFunc(lastCallTime.current) : result.current;\n        }\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          startTimer(timerExpired, wait);\n          return invokeFunc(lastCallTime.current);\n        }\n      }\n      if (!timerId.current) {\n        startTimer(timerExpired, wait);\n      }\n      return result.current;\n    };\n\n    func.cancel = () => {\n      if (timerId.current) {\n        useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n      }\n      lastInvokeTime.current = 0;\n      lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n    };\n\n    func.isPending = () => {\n      return !!timerId.current;\n    };\n\n    func.flush = () => {\n      return !timerId.current ? result.current : trailingEdge(Date.now());\n    };\n\n    return func;\n  }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n\n  return debounced;\n}\n","import { useCallback, useRef, useState, Dispatch } from 'react';\nimport useDebouncedCallback, { DebouncedState } from './useDebouncedCallback';\n\nfunction valueEquality<T>(left: T, right: T): boolean {\n  return left === right;\n}\n\nfunction adjustFunctionValueOfSetState<T>(value: T): T | (() => T) {\n  return typeof value === 'function' ? () => value : value;\n}\n\nfunction useStateIgnoreCallback<T>(initialState: T): [T, Dispatch<T>] {\n  const [state, setState] = useState(adjustFunctionValueOfSetState(initialState));\n  const setStateIgnoreCallback = useCallback((value: T) => setState(adjustFunctionValueOfSetState(value)), []);\n  return [state, setStateIgnoreCallback];\n}\n\nexport default function useDebounce<T>(\n  value: T,\n  delay: number,\n  options?: { maxWait?: number; leading?: boolean; trailing?: boolean; equalityFn?: (left: T, right: T) => boolean }\n): [T, DebouncedState<(value: T) => void>] {\n  const eq = (options && options.equalityFn) || valueEquality;\n\n  const [state, dispatch] = useStateIgnoreCallback(value);\n  const debounced = useDebouncedCallback(useCallback((value: T) => dispatch(value), [dispatch]), delay, options);\n  const previousValue = useRef(value);\n\n  if (!eq(previousValue.current, value)) {\n    debounced(value);\n    previousValue.current = value;\n  }\n\n  return [state, debounced];\n}\n","import useDebouncedCallback, { CallOptions, DebouncedState } from './useDebouncedCallback';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame).\n *\n * The throttled function comes with a `cancel` method to cancel delayed `func`\n * invocations and a `flush` method to immediately invoke them.\n *\n * Provide `options` to indicate whether `func` should be invoked on the leading\n * and/or trailing edge of the `wait` timeout. The `func` is invoked with the\n * last arguments provided to the throttled function.\n *\n * Subsequent calls to the throttled function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * const scrollHandler = useThrottledCallback(updatePosition, 100)\n * window.addEventListener('scroll', scrollHandler)\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const { callback } = useThrottledCallback(renewToken, 300000, { 'trailing': false })\n * <button onClick={callback}>click</button>\n *\n * // Cancel the trailing throttled invocation.\n * window.addEventListener('popstate', throttled.cancel);\n */\nexport default function useThrottledCallback<T extends (...args: any) => ReturnType<T>>(\n  func: T,\n  wait: number,\n  { leading = true, trailing = true }: CallOptions = {}\n): DebouncedState<T> {\n  return useDebouncedCallback(func, wait, {\n    maxWait: wait,\n    leading,\n    trailing,\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}