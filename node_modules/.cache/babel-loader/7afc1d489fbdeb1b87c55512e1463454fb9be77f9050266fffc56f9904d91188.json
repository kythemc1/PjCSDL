{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  auth: {},\n  user: {},\n  localUser: {},\n  nameArrival: [],\n  price: []\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.auth = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.auth = {\n        isLogged: false,\n        token: null,\n        refreshToken: null,\n        refreshTokenExpiredDate: null,\n        type: null\n      };\n      state.user = null;\n    },\n    setLocalUser(state, action) {\n      state.localUser = action.payload;\n    },\n    addProduct: (state, action) => {\n      state.Products.push(action.payload);\n    }\n  }\n});\nexport const {\n  setAuth,\n  addProduct\n} = authSlice.actions;\nexport const authReducer = authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","auth","user","localUser","nameArrival","price","authSlice","name","reducers","setAuth","state","action","payload","setUser","logout","isLogged","token","refreshToken","refreshTokenExpiredDate","type","setLocalUser","addProduct","Products","push","actions","authReducer","reducer"],"sources":["G:/CSDL/my-app/src/store/Reducer/authSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {IAuthState, IUserState, localUser} from './../Models/index';\r\n\r\ninterface Product {\r\n    name: string;\r\n    price: number;\r\n}\r\nconst initialState = {\r\n    auth: {} as IAuthState,\r\n    user: {} as IUserState | null,\r\n    localUser: {} as localUser,\r\n    nameArrival : [],\r\n    price :[]\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setAuth: (state, action: PayloadAction<IAuthState>) => {\r\n            state.auth = action.payload;\r\n        },\r\n        setUser: (state, action: PayloadAction<IUserState>) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: state => {\r\n            state.auth = {\r\n                isLogged: false,\r\n                token: null,\r\n                refreshToken: null,\r\n                refreshTokenExpiredDate: null,\r\n                type: null,\r\n            };\r\n            state.user = null;\r\n        },\r\n\r\n        setLocalUser(state,action: PayloadAction<localUser>){\r\n            state.localUser=action.payload;\r\n        },\r\n        addProduct: (state,action:PayloadAction<string>) => {\r\n            state.Products.push(action.payload)\r\n        },\r\n    }\r\n\r\n});\r\n\r\nexport const { setAuth, addProduct } = authSlice.actions;\r\n\r\nexport const authReducer =  authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CAAC,CAAe;EACtBC,IAAI,EAAE,CAAC,CAAsB;EAC7BC,SAAS,EAAE,CAAC,CAAc;EAC1BC,WAAW,EAAG,EAAE;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EACjCQ,IAAI,EAAE,MAAM;EACZP,YAAY,EAAEA,YAAY;EAC1BQ,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAiC,KAAK;MACnDD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAiC,KAAK;MACnDD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,MAAM,EAAEJ,KAAK,IAAI;MACbA,KAAK,CAACT,IAAI,GAAG;QACTc,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,IAAI;QACXC,YAAY,EAAE,IAAI;QAClBC,uBAAuB,EAAE,IAAI;QAC7BC,IAAI,EAAE;MACV,CAAC;MACDT,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB,CAAC;IAEDkB,YAAYA,CAACV,KAAK,EAACC,MAAgC,EAAC;MAChDD,KAAK,CAACP,SAAS,GAACQ,MAAM,CAACC,OAAO;IAClC,CAAC;IACDS,UAAU,EAAEA,CAACX,KAAK,EAACC,MAA4B,KAAK;MAChDD,KAAK,CAACY,QAAQ,CAACC,IAAI,CAACZ,MAAM,CAACC,OAAO,CAAC;IACvC;EACJ;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,OAAO;EAAEY;AAAW,CAAC,GAAGf,SAAS,CAACkB,OAAO;AAExD,OAAO,MAAMC,WAAW,GAAInB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}