{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  auth: {},\n  user: null,\n  localUser: {},\n  products: []\n};\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.auth = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.auth = {\n        isLogged: false,\n        token: null,\n        refreshToken: null,\n        refreshTokenExpiredDate: null,\n        type: null\n      };\n      state.user = null;\n    },\n    setLocalUser: (state, action) => {\n      state.localUser = action.payload;\n    },\n    addProduct: (state, action) => {\n      state.products.push(action.payload);\n    }\n  }\n});\nexport const {\n  setAuth,\n  addProduct\n} = appSlice.actions;\nexport const appReducer = appSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","auth","user","localUser","products","appSlice","name","reducers","setAuth","state","action","payload","setUser","logout","isLogged","token","refreshToken","refreshTokenExpiredDate","type","setLocalUser","addProduct","push","actions","appReducer","reducer"],"sources":["G:/CSDL/my-app/src/store/Reducer/authSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IAuthState, IUserState, localUser } from './../Models/index';\r\n\r\ninterface Product {\r\n    name: string;\r\n    price: number;\r\n}\r\n\r\ninterface AppState {\r\n    auth: IAuthState;\r\n    user: IUserState | null;\r\n    localUser: localUser;\r\n    products: Product[];\r\n}\r\n\r\nconst initialState: AppState = {\r\n    auth: {} as IAuthState,\r\n    user: null,\r\n    localUser: {} as localUser,\r\n    products: [],\r\n};\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        setAuth: (state, action: PayloadAction<IAuthState>) => {\r\n            state.auth = action.payload;\r\n        },\r\n        setUser: (state, action: PayloadAction<IUserState>) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.auth = {\r\n                isLogged: false,\r\n                token: null,\r\n                refreshToken: null,\r\n                refreshTokenExpiredDate: null,\r\n                type: null,\r\n            };\r\n            state.user = null;\r\n        },\r\n        setLocalUser: (state, action: PayloadAction<localUser>) => {\r\n            state.localUser = action.payload;\r\n        },\r\n        addProduct: (state, action: PayloadAction<Product>) => {\r\n            state.products.push(action.payload);\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setAuth,\r\n    addProduct,\r\n} = appSlice.actions;\r\n\r\nexport const appReducer = appSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAe7D,MAAMC,YAAsB,GAAG;EAC3BC,IAAI,EAAE,CAAC,CAAe;EACtBC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,CAAC,CAAc;EAC1BC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,QAAQ,GAAGN,WAAW,CAAC;EACzBO,IAAI,EAAE,KAAK;EACXN,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAiC,KAAK;MACnDD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAiC,KAAK;MACnDD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,MAAM,EAAGJ,KAAK,IAAK;MACfA,KAAK,CAACR,IAAI,GAAG;QACTa,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,IAAI;QACXC,YAAY,EAAE,IAAI;QAClBC,uBAAuB,EAAE,IAAI;QAC7BC,IAAI,EAAE;MACV,CAAC;MACDT,KAAK,CAACP,IAAI,GAAG,IAAI;IACrB,CAAC;IACDiB,YAAY,EAAEA,CAACV,KAAK,EAAEC,MAAgC,KAAK;MACvDD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IACpC,CAAC;IACDS,UAAU,EAAEA,CAACX,KAAK,EAAEC,MAA8B,KAAK;MACnDD,KAAK,CAACL,QAAQ,CAACiB,IAAI,CAACX,MAAM,CAACC,OAAO,CAAC;IACvC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTH,OAAO;EACPY;AACJ,CAAC,GAAGf,QAAQ,CAACiB,OAAO;AAEpB,OAAO,MAAMC,UAAU,GAAGlB,QAAQ,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}